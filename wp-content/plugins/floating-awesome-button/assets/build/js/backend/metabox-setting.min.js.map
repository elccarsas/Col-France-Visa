{"version":3,"file":"metabox-setting.min.js","mappings":";;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,kDAAkD,gDAAgD,WAAW,6BAA6B;AAC1I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0CAA0C;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA,4BAA4B,SAAS;AACrC,+BAA+B,QAAQ,EAAE,aAAa,EAAE,GAAG;AAC3D;AACA,4BAA4B,SAAS;AACrC,+BAA+B,cAAc,EAAE,mBAAmB,EAAE,GAAG;AACvE;AACA,4BAA4B,SAAS;AACrC,+BAA+B,YAAY,EAAE,iBAAiB,EAAE,GAAG;AACnE;AACA;AACA;AACA,wCAAwC,eAAe,YAAY,EAAE,iBAAiB,EAAE,GAAG,IAAI;AAC/F,wCAAwC,eAAe,aAAa,EAAE,kBAAkB,EAAE,GAAG,IAAI;AACjG,wCAAwC,eAAe,WAAW,EAAE,gBAAgB,EAAE,GAAG,IAAI;AAC7F;AACA,6BAA6B,SAAS;AACtC,+BAA+B,YAAY,uBAAuB,iBAAiB,uBAAuB,GAAG;AAC7G;AACA,6BAA6B,SAAS;AACtC,+BAA+B,aAAa,uBAAuB,kBAAkB,uBAAuB,GAAG;AAC/G;AACA,6BAA6B,SAAS;AACtC,+BAA+B,WAAW,uBAAuB,gBAAgB,uBAAuB,GAAG;AAC3G;AACA;AACA,0BAA0B,0CAA0C;AACpE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO","sources":["webpack://fab/./assets/ts/metabox-setting/metabox-setting.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Global Class  */\nwindow.FAB_METABOX_SETTING = Object.assign(Object.assign({}, window.FAB_METABOX_SETTING), { \n    /**\n     * Define Default Option\n     * */\n    defaultOptions: Object.assign(Object.assign({}, window.FAB_METABOX_SETTING.defaultOptions), { select2: { placeholder: '--choose--' } }), \n    /** Init */\n    init: () => {\n        /** Initiate Select2 */\n        jQuery('.fab-container.metabox-settings .select2').select2();\n        window.FAB_METABOX_SETTING.initTypeOptions();\n        window.FAB_METABOX_SETTING.initHotkeyOptions();\n        /** Trigger */\n        setTimeout(function () {\n            jQuery('#field_fab_setting_type').on('change.select2', window.FAB_METABOX_SETTING.triggerTypeChange);\n        }, 100);\n    }, \n    /**\n     * Init select2 type\n     * */\n    initTypeOptions: () => {\n        let dom = jQuery('#field_fab_setting_type');\n        if (dom) {\n            let options = [];\n            if (dom.data('select2'))\n                dom.select2('destroy');\n            /** Map Types */\n            options = options.concat(window.FAB_METABOX_SETTING.defaultOptions.types);\n            /** Init jQuery Select2 */\n            dom.select2({ placeholder: '--choose--', data: options });\n            if (dom.data('selected')) {\n                dom.val(dom.data('selected'));\n                dom.trigger('change');\n            }\n        }\n    }, \n    /**\n     * Init select2 hotkey\n     * */\n    initHotkeyOptions: () => {\n        let dom = jQuery('#field_fab_setting_hotkey');\n        if (dom) {\n            let options = [{ id: 'none', text: 'None' }];\n            if (dom.data('select2'))\n                dom.select2('destroy');\n            /** Map Function Key */\n            for (let i = 1; i <= 12; i++) {\n                options.push({ id: `f${i}`, text: `F${i}` });\n            }\n            for (let i = 1; i <= 12; i++) {\n                options.push({ id: `shift+f${i}`, text: `Shift+F${i}` });\n            }\n            for (let i = 1; i <= 12; i++) {\n                options.push({ id: `alt+f${i}`, text: `Alt+F${i}` });\n            }\n            /** Map Special Key */\n            let specialKey = ['esc', 'tab', 'space', 'return', 'backspace', 'insert', 'home', 'del', 'end', 'pageup', 'pagedown', 'left', 'up', 'right', 'down'];\n            specialKey.forEach((i) => { options.push({ id: `ctrl+${i}`, text: `Ctrl+${i}` }); });\n            specialKey.forEach((i) => { options.push({ id: `shift+${i}`, text: `Shift+${i}` }); });\n            specialKey.forEach((i) => { options.push({ id: `alt+${i}`, text: `Alt+${i}` }); });\n            /** Map CTRL, Shift, Alt Alphabetically */\n            for (let i = 65; i <= 90; i++) {\n                options.push({ id: `ctrl+${String.fromCharCode(i)}`, text: `Ctrl+${String.fromCharCode(i)}` });\n            }\n            for (let i = 65; i <= 90; i++) {\n                options.push({ id: `shift+${String.fromCharCode(i)}`, text: `Shift+${String.fromCharCode(i)}` });\n            }\n            for (let i = 65; i <= 90; i++) {\n                options.push({ id: `alt+${String.fromCharCode(i)}`, text: `Alt+${String.fromCharCode(i)}` });\n            }\n            /** Init jQuery Select2 */\n            dom.select2({ placeholder: '--choose--', data: options });\n            if (dom.data('selected')) {\n                dom.val(dom.data('selected'));\n                dom.trigger('change');\n            }\n        }\n    }, \n    /** Setting Type Event Change\n     * Hide open in new window if type is not link\n     */\n    triggerTypeChange(el) {\n        window.FAB_METABOX_SETTING.data.fab.type = el.target.value;\n        jQuery('#fab_setting_type_update').click();\n    } });\n"],"names":[],"sourceRoot":""}